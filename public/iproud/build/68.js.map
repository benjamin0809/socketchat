{"version":3,"sources":["../../src/pages/contact/contact-option/contact-option.module.ts","../../src/pages/contact/contact-option/contact-option.ts"],"names":[],"mappings":"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","file":"68.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ContactOptionPage } from './contact-option';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n@NgModule({\r\n  declarations: [\r\n    ContactOptionPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ContactOptionPage),\r\n    TranslateModule\r\n  ],\r\n})\r\nexport class ContactOptionPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact-option/contact-option.module.ts","import { Friends } from './../../../models/contact';\r\nimport { MessageProvider } from './../../../providers/message-provider';\r\nimport { Utility } from './../../../services/utility';\r\nimport { StorageService } from './../../../services/storage-service';\r\nimport { Session } from './../../../services/session';\r\nimport { PreloadProvider } from './../../../providers/preload-provider';\r\nimport { Events } from 'ionic-angular';\r\nimport { ContactProvider } from './../../../providers/contact-provider';\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams ,AlertController} from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SqliteProvider } from './../../../providers/sqlite-provider';\r\n/**\r\n * Generated class for the ContactOptionPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-contact-option',\r\n  templateUrl: 'contact-option.html',\r\n})\r\nexport class ContactOptionPage {\r\n\r\n  contact: any; \r\n  starTimer: any; \r\n  blockTimer:any;\r\n  //private isBlock:boolean = false;\r\n\r\n  constructor(public navCtrl: NavController, \r\n    public navParams: NavParams,\r\n    public alertCtrl:AlertController,\r\n    public contactProvider: ContactProvider,\r\n    public events: Events,\r\n    public preload: PreloadProvider,\r\n    public session: Session,\r\n    public sqliteProvider: SqliteProvider,\r\n    public storageService: StorageService,\r\n    public translateService:TranslateService,\r\n    public messageProvider: MessageProvider\r\n    ) {\r\n    this.contact = this.navParams.data; \r\n  \r\n    \r\n  }\r\n \r\n  showRemoveFriendMessage(){\r\n    let confirm = this.alertCtrl.create({\r\n      title: \"\",\r\n      message: this.translateService.instant('CONTACT_OPTION_DELETE_ALERT'),\r\n      buttons: [\r\n        {\r\n          text: this.translateService.instant('MESSAGE_DELETE_CANCEL'),\r\n          role: 'cancel' \r\n        },\r\n        {\r\n          text: this.translateService.instant('MESSAGE_DELETE_CONFIRM'),\r\n          handler: () => {\r\n            this.RemoveFriend();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirm.present();\r\n  }\r\n\r\n  /**\r\n   * 删除好友\r\n   */\r\n  RemoveFriend(){\r\n    this.contactProvider.RemoveFriend(this.contact.id).subscribe(res=>{ //调API删除服务器中的好友\r\n      this.messageProvider.deleteMessageBySessionId(this.contact.id)   //删除对话框，记录\r\n      this.sqliteProvider.deleteContact(this.contact.id).subscribe((result)=>{  //删除本地好友\r\n        if(result){\r\n          this.sqliteProvider.deletefriendInfo(this.contact.id).subscribe() //删除本地好友信息\r\n          this.events.publish('contact: refresh-friendsFromSqlite') //发布通知刷新好友 \r\n          this.events.publish('contact:refresh-newFriends');\r\n          this.popToContactPage()\r\n        } \r\n      })  \r\n    })\r\n  }\r\n\r\n  /**\r\n   * 返回到好友列表\r\n   */\r\n  popToContactPage(){  \r\n    for(let i = 0; i < this.navCtrl.length();i++ ){\r\n      let view = this.navCtrl.getByIndex(i);\r\n      if(view.name == 'ContactPage' || view.id == 'ContactPage'){\r\n        this.navCtrl.popTo(view)\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * 加入或取消黑名单前询问\r\n   * @param contact \r\n   */\r\n  showBlockFriendMessage(contact){ \r\n    let message = contact.isBlack ? this.translateService.instant('CONTACT_OPTION_BLACKLIST_ALERT') : this.translateService.instant('CONTACT_OPTION_BLACKLIST_UNDO_ALERT')\r\n    let confirm = this.alertCtrl.create({\r\n      title: \"\",\r\n      message: message,\r\n      buttons: [\r\n        {\r\n          text: this.translateService.instant('MESSAGE_DELETE_CANCEL'),\r\n          handler: () => { \r\n            contact.isBlack = !contact.isBlack\r\n          }\r\n        },\r\n        {\r\n          text: this.translateService.instant('MESSAGE_DELETE_CONFIRM'),\r\n          handler: () => {\r\n            this.blockMember(contact.id, contact.isBlack)\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    confirm.present();\r\n     \r\n  } \r\n\r\n  /**\r\n   * 加入或取消黑名单\r\n   * @param memberId \r\n   * @param isBlock \r\n   */\r\n  blockMember(memberId: number, isBlock: boolean){\r\n    this.blockTimer && clearTimeout(this.blockTimer)\r\n    this.blockTimer = setTimeout(()=>{\r\n      if(isBlock){\r\n        this.contactProvider.AddToBlackList(memberId).subscribe(res=>{\r\n          this.saveLocalData(isBlock) \r\n        })\r\n      }else{\r\n        this.contactProvider.RemoveFromBlackList(memberId).subscribe(res=>{ \r\n          this.saveLocalData(isBlock)\r\n        })\r\n      } \r\n    },2000) \r\n  }\r\n \r\n  /**\r\n   * 写入到本地数据库\r\n   * @param isBlack \r\n   */\r\n  saveLocalData(isBlack: boolean){\r\n    let friends: Friends = {\r\n      GroupId: this.contact.friendTagId,   // GroupId\r\n      FriendId: this.contact.id,   // FriendId\r\n      IsStar: this.contact.IsStar ? 1 : 0,\r\n      Extra:this.contact  \r\n    }\r\n    this.sqliteProvider.saveFriendInfo(this.contact).subscribe();  \r\n    this.sqliteProvider.saveContact(friends).subscribe(res=>{ \r\n      this.events.publish('contact: refresh-friendsFromSqlite')\r\n    })\r\n  }\r\n  /**打开设置备注和标签 */\r\n  openSetRemarkPage(){\r\n    this.navCtrl.push('ContactSetremarkPage',this.contact)\r\n  }\r\n\r\n\r\n  /** 设置为星标好友 或 取消星标好友 */\r\n  StarFriend(){\r\n    this.starTimer && clearTimeout(this.starTimer); \r\n    this.starTimer = setTimeout(()=>{\r\n    this.contactProvider.FriendSetting(this.contact.id,[{\r\n        \"Name\":\"isstar\",\r\n        \"value\":this.contact.isStar\r\n     }]).subscribe(res=>{        \r\n        //更新sql表\r\n        // this.sqliteProvider.updateFriendInfo(this.contact).subscribe(()=>{\r\n\r\n        // });\r\n    }) \r\n  },1500)\r\n  }\r\n\r\n \r\n  shareContact(){\r\n    this.preload.openContactChooserPage({\r\n      callback:(data)=>{\r\n        console.log(data)\r\n\r\n          let memberUrl =  this.contactProvider.generateMemberURL(this.contact.id);\r\n          Utility.generateQRCode(memberUrl).then(QRCode=>{\r\n            if(data){\r\n              for(let item of data){ \r\n                let storageKey = 'private-Message:id=' +  item.id + '&' + this.session.userId;\r\n                this.storageService.getItem(storageKey).then(res=>{\r\n                  const messageData =  {\r\n                    toId: item.id,\r\n                    _id: 'id' + Date.now(),\r\n                    date: new Date(),\r\n                    receiveTime: new Date(),\r\n                    userId: this.session.userId,\r\n                    username: this.session.username,\r\n                    pic: item.avator,\r\n                    text: QRCode,\r\n                    image: QRCode,\r\n                    formatType: 'image'\r\n                  };\r\n\r\n                  if(!res)res=[];\r\n                  res.push(messageData)\r\n                  this.storageService.setItem(storageKey,res)\r\n                })\r\n              }\r\n            } \r\n          })\r\n      },\r\n      title:'sent to' ,\r\n      type: 0\r\n    })\r\n  }\r\n\r\n  ShareCallback(data){ \r\n\r\n    let memberUrl =  this.contactProvider.generateMemberURL(this.contact.id);\r\n    Utility.generateQRCode(memberUrl).then(res=>{\r\n      if(data){\r\n        for(let item of data){ \r\n          let storageKey = 'private-Message:id=' +  item.id + '&' + this.session.userId;\r\n          this.storageService.getItem(storageKey).then(res=>{\r\n            const messageData =  {\r\n              toId: item.id,\r\n              _id: 'id' + Date.now(),\r\n              date: new Date(),\r\n              receiveTime: new Date(),\r\n              userId: this.session.userId,\r\n              username: this.session.username,\r\n              pic: item.avator,\r\n              text: res,\r\n              image: res,\r\n              formatType: 'image'\r\n            };\r\n\r\n            if(!res)res=[];\r\n            res.push(messageData)\r\n            this.storageService.setItem(storageKey,res)\r\n          })\r\n        }\r\n      } \r\n    })\r\n   \r\n  \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact-option/contact-option.ts"],"sourceRoot":""}