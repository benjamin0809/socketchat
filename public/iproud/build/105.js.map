{"version":3,"sources":["../../src/pages/beta/storage-key-managment/storage-key-managment.module.ts","../../src/pages/beta/storage-key-managment/storage-key-managment.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACkB;AAUlE;IAAA;IAA4C,CAAC;IAAhC,6BAA6B;QARzC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uFAAuB;aACxB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uFAAuB,CAAC;aAClD;SACF,CAAC;OACW,6BAA6B,CAAG;IAAD,oCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACe;AACG;AAE5D;;;;;GAKG;AAOH;IAIE,iCAAmB,OAAsB,EAChC,SAAoB,EACpB,cAA8B;QAFpB,YAAO,GAAP,OAAO,CAAe;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,mBAAc,GAAd,cAAc,CAAgB;QAJvC,WAAM,GAAY,KAAK,CAAC;QAMpB,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,yCAAO,GAAP;QAAA,iBAYC;QAXC,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,aAAG;YAEpC,GAAG,EAAa,UAAG,EAAH,WAAG,EAAH,iBAAG,EAAH,IAAG;gBAAf,IAAI,IAAI;gBACV,IAAI,GAAG,GAAG;oBACR,IAAI,EAAE,IAAI;oBACV,OAAO,EAAE,KAAK;iBACf;gBACD,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IACD,2CAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,UAAC,YAAY,EAAE,KAAK,EAAE,KAAK;YAC9C,EAAE,EAAC,YAAY,CAAC,OAAO,CAAC,EAAC;gBACvB,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,CAAC;QACF,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,6CAAW,GAAX;QACE,GAAG,EAAa,UAAW,EAAX,SAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW;YAAvB,IAAI,IAAI;YACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;IACH,CAAC;IAEK,6CAAW,GAAjB,UAAkB,QAAQ;;;;;;wBACxB,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC;4BAAA,MAAM,gBAAC;wBAET,qBAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC;;wBAApD,MAAM,GAAG,SAA2C;wBACxD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAC;4BACpC,MAAM,EAAE,MAAM;yBACf,CAAC;;;;;KACH;IA/CU,uBAAuB;QAJnC,gEAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;WACG;SAC1C,CAAC;6EAKyC;YACrB,0EAAS;YACJ,cAAc;OAN5B,uBAAuB,CAgDnC;IAAD,CAAC;AAAA;SAhDY,uBAAuB,iB","file":"105.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { StorageKeyManagmentPage } from './storage-key-managment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StorageKeyManagmentPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(StorageKeyManagmentPage),\r\n  ],\r\n})\r\nexport class StorageKeyManagmentPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/beta/storage-key-managment/storage-key-managment.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { StorageService } from '../../../services/services';\r\n\r\n/**\r\n * Generated class for the StorageKeyManagmentPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-storage-key-managment',\r\n  templateUrl: 'storage-key-managment.html',\r\n})\r\nexport class StorageKeyManagmentPage {\r\n\r\n  isEdit: boolean = false;\r\n  result: any;\r\n  constructor(public navCtrl: NavController, \r\n    public navParams: NavParams,\r\n    public storageService: StorageService) {\r\n      \r\n      this.getkeys();\r\n  }\r\n\r\n  getkeys(){\r\n    this.result = []\r\n    this.storageService.getKeys().then(res=>{\r\n\r\n      for(let item of res){\r\n        let obj = {\r\n          name: item,\r\n          checked: false\r\n        }\r\n        this.result.push(obj)\r\n      } \r\n    })\r\n  }\r\n  deleteKey(){ \r\n    this.result.forEach( (currentValue, index, array)=>{ \r\n      if(currentValue.checked){ \r\n        this.storageService.removeItem(currentValue.name);\r\n      }\r\n    })\r\n    this.getkeys();\r\n    this.isEdit = false;\r\n  }\r\n   \r\n  allSelected(){\r\n    for(let item of this.result){\r\n      item.checked = true;\r\n    }\r\n  }\r\n\r\n  async openDetails(_keyName){\r\n    if(this.isEdit)return;\r\n\r\n    let result = await this.storageService.getItem(_keyName); \r\n    this.navCtrl.push('HandleDetailsPage',{\r\n      result: result\r\n    })\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/beta/storage-key-managment/storage-key-managment.ts"],"sourceRoot":""}